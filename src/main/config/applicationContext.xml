<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://cxf.apache.org/jaxws 
		http://cxf.apache.org/schemas/jaxws.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">	
		
	<import resource="classpath:META-INF/cxf/cxf.xml" /> 
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" /> 
	
    <context:annotation-config />
    <context:component-scan base-package="edu.zju.bme.clever.website">
		<context:exclude-filter type="regex"
			expression="edu.zju.bme.clever.webisite.controller.*" />
	</context:component-scan>
    
    <jaxws:client 
    	id="cleverClient"
		serviceClass="edu.zju.bme.clever.service.CleverService"
		address="${service.url}?wsdl">
	</jaxws:client>
      
    <jaxws:client 
    	id="cleverValidationClient"
		serviceClass="edu.zju.bme.clever.service.CleverService"
		address="${validation.url}?wsdl">
	</jaxws:client>
	
	<!-- spring cache start -->
	<cache:annotation-driven cache-manager="cacheManager"/> 
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">  
	    <property name="caches">  
	        <set>  
	            <bean  
	                class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"  
	                p:name="default" />  
	            <bean  
	                class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"  
	                p:name="layoutCache" /> 
	            <bean  
	                class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"  
	                p:name="appLibraryCache" /> 
	        </set>  
	    </property>   
    </bean> 
	<!-- spring cache end -->
	
	<!-- spring security start -->
	
	<sec:http pattern="/js/**" security="none" />
	<sec:http pattern="/css/**" security="none" />
	<sec:http pattern="/font/**" security="none" />
	<sec:http pattern="/img/**" security="none" />
	<sec:http pattern="/resources/**" security="none" />
	<sec:http pattern="/upload/**" security="none" />

	<!-- 开启默认的拦截器 -->
	<sec:http auto-config="true" use-expressions="true">
		<!-- 允许访问的uri -->
		<sec:intercept-url pattern="/#/login" access="permitAll" />
		<sec:intercept-url pattern="/" access="permitAll" />
		<sec:intercept-url pattern="/archetypes" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/authentication" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/applications" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/layout/id/*" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/layouts" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/classification/id/*" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/classifications" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/archetypes/type/id/*" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/archetype/id/*" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/archetype/name/*" access="permitAll" method="GET"/>
		<sec:intercept-url pattern="/archetypes/validation" access="isAuthenticated()" method="POST"/>
		<sec:intercept-url pattern="/application/id/*" access="isAuthenticated()" method="POST"/>
		<sec:intercept-url pattern="/layout/id/*" access="isAuthenticated()" method="POST"/>
		<sec:intercept-url pattern="/**" access="isAuthenticated()" />

		<!-- 登陆页面配置 -->
		<sec:form-login login-page="/#/login"
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-handler-ref="authenticationFailureHandler" 
			username-parameter="username"
			password-parameter="password"/>
		<!-- 退出页面设置 -->
		<sec:logout logout-url="/logout" invalidate-session="true" delete-cookies="JSESSIONID"
			success-handler-ref="logoutSuccessHandler" />
		<!-- remember me -->
		<sec:remember-me remember-me-parameter="remember-me"/>

		<!-- 会话管理 -->
		<sec:session-management>
			<!-- 并行控制 -->
			<sec:concurrency-control max-sessions="1"
				error-if-maximum-exceeded="false" expired-url="/login" />
		</sec:session-management>
	</sec:http>

	<bean id="logoutSuccessHandler"
		class="edu.zju.bme.clever.website.spring.security.LogoutSuccessHandlerImpl">
		<constructor-arg value="/" />
	</bean>

	<bean id="authenticationSuccessHandler"
		class="edu.zju.bme.clever.website.spring.security.AuthenticationSuccessHandlerImpl" />
		
	<bean id="authenticationFailureHandler"
		class="edu.zju.bme.clever.website.spring.security.AuthenticationFailureHandlerImpl" />

	<!-- 权限管理者 -->
	<sec:authentication-manager>
		<!-- 权限提供者 -->
		<sec:authentication-provider
			user-service-ref="userDetailsService">
		</sec:authentication-provider>
	</sec:authentication-manager>
	
	<!-- spring security end -->
	
	<!-- hibernate start -->
	<bean id="c3p0DataSource" destroy-method="close" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
        <property name="jdbcUrl" value="${database.url}" />
        <property name="user" value="${database.username}" />
        <property name="password" value="${database.password}" />
        <property name="initialPoolSize" value="5" />
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="20" />
        <property name="maxIdleTime" value="100" />
        <property name="acquireIncrement" value="5" />
    </bean> 
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="c3p0DataSource" />
        <property name="packagesToScan">  
            <list>  
                <value>edu.zju.bme.clever.website.model.entity</value>  
            </list>  
        </property> 
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">edu.zju.bme.clever.website.util.UnicodeSQLServerDialect</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>	
	
	<!-- hibernate end -->
	
</beans>